# Author : Amelia Cyber
# https://www.github.com/AMELIA-404-CYBER
# apa liat liat file mau dec ya
# gk bakal bisa dec file ini
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'=='))